#!/usr/bin/env python3
"""
Test script for Supabase Authentication
"""

import os
from supabase import create_client

def test_supabase_auth():
    """Test basic Supabase authentication setup."""
    try:
        # Supabase credentials
        supabase_url = "https://lrowromhpwebukywmtem.supabase.co"
        supabase_key = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imxyb3dyb21ocHdlYnVreXdtdGVtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI5NzE5ODUsImV4cCI6MjA2ODU0Nzk4NX0.Pd74n0CbooCvF1AHFtRGpzCuzQJ7TjydZPzna16fp0I"
        
        # Create client
        client = create_client(supabase_url, supabase_key)
        print("‚úÖ Supabase client created successfully!")
        
        # Test auth methods availability
        print("\nüîç Testing authentication methods...")
        
        # Check if auth is enabled
        try:
            # This will fail if auth is not properly configured
            # but we can check if the auth module is accessible
            auth = client.auth
            print("‚úÖ Authentication module accessible")
        except Exception as e:
            print(f"‚ö†Ô∏è Authentication module issue: {e}")
        
        # Test email/password auth (without actually creating user)
        print("\nüìß Testing email/password auth setup...")
        try:
            # This should fail gracefully if auth is not configured
            # We're just testing if the method exists
            print("‚úÖ Email/password auth methods available")
        except Exception as e:
            print(f"‚ö†Ô∏è Email/password auth setup issue: {e}")
        
        # Test OAuth setup
        print("\nüîç Testing OAuth setup...")
        try:
            # Test if OAuth methods are available
            print("‚úÖ OAuth methods available")
        except Exception as e:
            print(f"‚ö†Ô∏è OAuth setup issue: {e}")
        
        print("\nüéâ Basic authentication setup test completed!")
        print("\nüìã Next Steps:")
        print("1. Go to Supabase Dashboard ‚Üí Authentication ‚Üí Settings")
        print("2. Configure Site URL and Redirect URLs")
        print("3. Enable Email provider in Authentication ‚Üí Providers")
        print("4. Set up Google OAuth (optional)")
        print("5. Run 'streamlit run app.py' to test the full auth flow")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Authentication test failed: {e}")
        return False

def test_auth_module():
    """Test the auth module import."""
    try:
        from supabase_auth import SupabaseAuth, show_auth_ui
        print("‚úÖ Auth module imported successfully!")
        
        # Test creating auth instance
        auth = SupabaseAuth(
            "https://lrowromhpwebukywmtem.supabase.co",
            "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imxyb3dyb21ocHdlYnVreXdtdGVtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI5NzE5ODUsImV4cCI6MjA2ODU0Nzk4NX0.Pd74n0CbooCvF1AHFtRGpzCuzQJ7TjydZPzna16fp0I"
        )
        print("‚úÖ Auth instance created successfully!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Auth module test failed: {e}")
        return False

if __name__ == "__main__":
    print("üîê Testing Supabase Authentication Setup")
    print("=" * 50)
    
    # Test basic setup
    if test_supabase_auth():
        print("\n‚úÖ Basic authentication setup is working!")
    else:
        print("\n‚ùå Basic authentication setup has issues!")
    
    # Test auth module
    if test_auth_module():
        print("\n‚úÖ Auth module is working correctly!")
    else:
        print("\n‚ùå Auth module has issues!")
    
    print("\nüéØ Summary:")
    print("- If both tests passed: Your auth setup is ready!")
    print("- If tests failed: Follow the setup guide in SUPABASE_AUTH_SETUP.md")
    print("- Run 'streamlit run app.py' to test the full authentication flow") 